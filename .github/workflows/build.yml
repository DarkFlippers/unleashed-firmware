name: 'Build'

on:
  push:
    branches:
      - dev
      - "release*"
    tags:
      - '*'
  pull_request:

env:
  TARGETS: f7
  DEFAULT_TARGET: f7

jobs:
  main:
    runs-on: [self-hosted,FlipperZero]
    steps:
      - name: 'Cleanup workspace'
        uses: AutoModality/action-clean@v1

      - name: 'Decontaminate previous build leftovers'
        run: |
          if [ -d .git ]
          then
            git submodule status \
              || git checkout `git rev-list --max-parents=0 HEAD | tail -n 1`
          fi

      - name: 'Checkout code'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true
          ref: ${{ github.event.pull_request.head.sha }}

      - name: 'Build docker image'
        uses: ./.github/actions/docker

      - name: 'Make artifacts directory'
        run: |
          test -d artifacts && rm -rf artifacts || true
          mkdir artifacts

      - name: 'Generate suffix and folder name'
        id: names
        run: |
          REF=${{ github.ref }}
          if [[ ${{ github.event_name }} == 'pull_request' ]]; then
            REF=${{ github.head_ref }}
          fi
          BRANCH_OR_TAG=${REF#refs/*/}
          SHA=$(git rev-parse --short HEAD)

          if [[ "${{ github.ref }}" == "refs/tags/"* ]]; then
            SUFFIX=${BRANCH_OR_TAG//\//_}
          else
            SUFFIX=${BRANCH_OR_TAG//\//_}-$(date +'%d%m%Y')-${SHA}
          fi

          echo "WORKFLOW_BRANCH_OR_TAG=${BRANCH_OR_TAG}" >> $GITHUB_ENV
          echo "DIST_SUFFIX=${SUFFIX}" >> $GITHUB_ENV
          echo "::set-output name=artifacts-path::${BRANCH_OR_TAG}"
          echo "::set-output name=suffix::${SUFFIX}"
          echo "::set-output name=short-hash::${SHA}"
          echo "::set-output name=default-target::${DEFAULT_TARGET}"

      - name: 'Bundle scripts'
        if: ${{ !github.event.pull_request.head.repo.fork }}
        run: |
          tar czpf artifacts/flipper-z-any-scripts-${{steps.names.outputs.suffix}}.tgz scripts

      - name: 'Build the firmware in docker'
        uses: ./.github/actions/docker
        with:
          run: |
            set -e
            for TARGET in ${TARGETS}
            do
              ./fbt TARGET_HW=`echo ${TARGET} | sed 's/f//'` --with-updater updater_package ${{ startsWith(github.ref, 'refs/tags') && 'DEBUG=0 COMPACT=1' || '' }}
            done

      - name: 'Move upload files'
        if: ${{ !github.event.pull_request.head.repo.fork }}
        uses: ./.github/actions/docker
        with:
          run: |
            set -e
            for TARGET in ${TARGETS}
            do
              mv dist/${TARGET}-*/* artifacts/
            done

      - name: 'Bundle self-update package'
        if: ${{ !github.event.pull_request.head.repo.fork }}
        uses: ./.github/actions/docker
        with:
          run: |
            set -e
            for UPDATEBUNDLE in artifacts/*/
            do
              BUNDLE_NAME=`echo $UPDATEBUNDLE | cut -d'/' -f2`
              echo Packaging ${BUNDLE_NAME}
              tar czpf artifacts/flipper-z-${BUNDLE_NAME}.tgz -C artifacts ${BUNDLE_NAME}
              rm -rf artifacts/${BUNDLE_NAME}
            done

      - name: 'Bundle resources'
        if: ${{ !github.event.pull_request.head.repo.fork }}
        run: |
          tar czpf artifacts/flipper-z-any-resources-${{steps.names.outputs.suffix}}.tgz -C assets resources

      - name: 'Bundle core2 firmware'
        if: ${{ !github.event.pull_request.head.repo.fork }}
        uses: ./.github/actions/docker
        with:
          run: |
            ./fbt copro_dist
            tar czpf artifacts/flipper-z-any-core2_firmware-${{steps.names.outputs.suffix}}.tgz -C assets core2_firmware

      - name: 'Upload artifacts to update server'
        if: ${{ !github.event.pull_request.head.repo.fork }}
        uses: burnett01/rsync-deployments@5.1
        with:
          switches: -avzP --delete --mkpath
          path: artifacts/
          remote_path: "${{ secrets.RSYNC_DEPLOY_BASE_PATH }}${{steps.names.outputs.artifacts-path}}/"
          remote_host: ${{ secrets.RSYNC_DEPLOY_HOST }}
          remote_port: ${{ secrets.RSYNC_DEPLOY_PORT }}
          remote_user: ${{ secrets.RSYNC_DEPLOY_USER }}
          remote_key: ${{ secrets.RSYNC_DEPLOY_KEY }}

      - name: 'Trigger update server reindex'
        if: ${{ !github.event.pull_request.head.repo.fork }}
        uses: wei/curl@master
        with:
          args: -X POST -F 'key=${{ secrets.REINDEX_KEY }}' ${{ secrets.REINDEX_URL }}

      - name: 'Find Previous Comment'
        if: ${{ !github.event.pull_request.head.repo.fork && github.event.pull_request }}
        uses: peter-evans/find-comment@v1
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: 'Compiled firmware for commit'

      - name: 'Create or update comment'
        if: ${{ !github.event.pull_request.head.repo.fork && github.event.pull_request}}
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            **Compiled firmware for commit `${{steps.names.outputs.short-hash}}`:**
            - [📦 Update package](https://update.flipperzero.one/builds/firmware/${{steps.names.outputs.artifacts-path}}/flipper-z-${{steps.names.outputs.default-target}}-update-${{steps.names.outputs.suffix}}.tgz)
            - [📥 DFU file](https://update.flipperzero.one/builds/firmware/${{steps.names.outputs.artifacts-path}}/flipper-z-${{steps.names.outputs.default-target}}-full-${{steps.names.outputs.suffix}}.dfu)
            - [☁️ Web updater](https://my.flipp.dev/?url=https://update.flipperzero.one/builds/firmware/${{steps.names.outputs.artifacts-path}}/flipper-z-${{steps.names.outputs.default-target}}-update-${{steps.names.outputs.suffix}}.tgz&channel=${{steps.names.outputs.artifacts-path}}&version=${{steps.names.outputs.short-hash}})
          edit-mode: replace

  compact:
    if: ${{ !startsWith(github.ref, 'refs/tags') }}
    runs-on: [self-hosted,FlipperZero]
    steps:
      - name: 'Cleanup workspace'
        uses: AutoModality/action-clean@v1

      - name: 'Decontaminate previous build leftovers'
        run: |
          if [ -d .git ]
          then
            git submodule status \
              || git checkout `git rev-list --max-parents=0 HEAD | tail -n 1`
          fi

      - name: 'Checkout code'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true
          ref: ${{ github.event.pull_request.head.sha }}

      - name: 'Build docker image'
        uses: ./.github/actions/docker

      - name: 'Generate suffix and folder name'
        id: names
        run: |
          REF=${{ github.ref }}
          if [[ ${{ github.event_name }} == 'pull_request' ]]; then
            REF=${{ github.head_ref }}
          fi
          BRANCH_OR_TAG=${REF#refs/*/}
          SHA=$(git rev-parse --short HEAD)

          if [[ "${{ github.ref }}" == "refs/tags/"* ]]; then
            SUFFIX=${BRANCH_OR_TAG//\//_}
          else
            SUFFIX=${BRANCH_OR_TAG//\//_}-$(date +'%d%m%Y')-${SHA}
          fi

          echo "WORKFLOW_BRANCH_OR_TAG=${BRANCH_OR_TAG}" >> $GITHUB_ENV
          echo "DIST_SUFFIX=${SUFFIX}" >> $GITHUB_ENV

      - name: 'Build the firmware in docker'
        uses: ./.github/actions/docker
        with:
          run: |
            set -e
            for TARGET in ${TARGETS}
            do
              ./fbt TARGET_HW=`echo ${TARGET} | sed 's/f//'` --with-updater updater_package DEBUG=0 COMPACT=1
            done
