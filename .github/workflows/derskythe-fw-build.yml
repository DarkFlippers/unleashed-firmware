name: Build Firmware
run-name: "Build Firmware ${{ github.ref_name }} by @${{ github.ACTOR }}"
# Manual trigger
on:
  workflow_dispatch:
  push:
    branches: ["github-actions"]

env:
  WORKFLOW_BRANCH_OR_TAG: "dev-cfw"
  FBT_TOOLS_CUSTOM_LINK: "fbt_link"
  FORCE_NO_DIRTY: yes
  DIST_SUFFIX: ${{ vars.FIRMWARE_VERSION }}
  ZIP_NAME: "flipper-z-f7-update-${{ vars.FIRMWARE_VERSION }}e.zip"
  TGZ_NAME: "flipper-z-f7-update-${{ vars.FIRMWARE_VERSION }}e.tgz"

jobs:
  build-with-extra-apps:
    needs: checkout-with-extra-apps
    name: Build release FW
    runs-on: ubuntu-latest
    steps:
      - name: Remove other apps
        shell: pwsh # rm to remove problem FAP which includes non-existent files
        run: |
          Remove-Item -Force -Recurse ./applications/debug -ErrorAction SilentlyContinue
          Remove-Item -Force -Recurse ./applications/examples -ErrorAction SilentlyContinue
          Invoke-WebRequest -URI https://github.com/xMasterX/all-the-plugins/releases/latest/download/all-the-apps-extra.tgz -OutFile all-the-apps-extra.tgz

      - name: Pre Build
        shell: pwsh
        run: |
          ls -a
          tar -zxvf all-the-apps-extra.tgz
          Copy-Item -Force -Recurse "extra_pack_build/artifacts-extra/*" "assets/resources/apps/"
          Remove-Item -Force -Recurse "extra_pack_build"
          Remove-Item -Force -Recurse "build/f7-firmware-C/toolbox/version.*"

      - name: Build with extra apps
        shell: bash
        run: |
          ./fbt COMPACT=1 DEBUG=0 updater_package

      - name: Post Build
        shell: pwsh
        run: |
          mkdir artifacts-extra-apps
          Move-Item -Force "dist/f7-C/*" "artifacts-extra-apps/"
          ls -laS artifacts-extra-apps
          ls -laS "artifacts-extra-apps/f7-update-${{ vars.FIRMWARE_VERSION }}e"

      - name: Bundle Self-update package
        shell: pwsh
        run: |
          cp artifacts-extra-apps/${{ env.TGZ_NAME }} .
          zip -r artifacts-extra-apps/${{ env.ZIP_NAME }} artifacts-extra-apps/f7-update-${{ vars.FIRMWARE_VERSION }}e
          rm -rf artifacts-extra-apps/f7-update-${{ vars.FIRMWARE_VERSION }}
          ls -laS artifacts-extra-apps
          mv artifacts-default/ ${{ vars.FIRMWARE_VERSION }}
          ls -laS ${{ vars.FIRMWARE_VERSION }}

  updload-artifacts-extra-apps:
    name: Upload artifacts and create release
    runs-on: ubuntu-latest
    needs: build-with-extra-apps
    env:
      DIST_SUFFIX: ${{ vars.FIRMWARE_VERSION }}
      ZIP_NAME: ""
      TGZ_NAME: ""
      ZIP_TAG: ""
      TGZ_TAG: ""
    steps:
      - name: Upload production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: all-files
          path: |
            - ${{ vars.FIRMWARE_VERSION }}/*.tgz
            - ${{ vars.FIRMWARE_VERSION }}/*.zip
            - ${{ vars.FIRMWARE_VERSION }}/*.json
            - ${{ vars.FIRMWARE_VERSION }}/*.elf
            - ${{ vars.FIRMWARE_VERSION }}/*.dfu
            - ${{ vars.FIRMWARE_VERSION }}/*.bin

      # - name: Export to env file name
      #   shell: pwsh
      #   run: |
      #     Write-Output ('ZIP_NAME={0}' -f 'flipper-z-f7-update-${{ vars.FIRMWARE_VERSION }}e.zip') >> $env:GITHUB_ENV
      #     Write-Output ('TGZ_NAME={0}' -f 'flipper-z-f7-update-${{ vars.FIRMWARE_VERSION }}e.tgz' ) >> $env:GITHUB_ENV

      - name: Create tags for assets
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.FLIPPER_ZERO_FW }}
        run: |
          ./.github/create-assets-tag.ps1 '${{ env.ZIP_NAME }}' '${{ env.TGZ_NAME }}' '${{ vars.FIRMWARE_VERSION }}' 1 | %{ Write-Output($_) >> $Env:GITHUB_ENV }

      - name: Create assets and release
        if: ${{ success() }}
        env:
          GITHUB_TOKEN: ${{ secrets.FLIPPER_ZERO_FW }}
        shell: bash
        run: |
          gh release upload '${{ vars.FIRMWARE_VERSION }}' --clobber \
            '${{ env.ZIP_NAME }}#${{ env.ZIP_TAG }}' '${{ env.TGZ_NAME }}#${{ env.TGZ_TAG }}' \
            -R ${{ github.repository }}
          gh release edit 'v${{ vars.FIRMWARE_VERSION }}' --draft=false -R ${{ github.repository }}

  checkout-with-extra-apps:
    name: Checkout with extra apps
    runs-on: ubuntu-latest
    steps:
      - name: Checkout FW
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
          clean: true

      - name: Checkout SubBruteForce
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
          clean: true
          repository: "derskythe/flipperzero-subbrute"
          path: applications_user/subbrute
