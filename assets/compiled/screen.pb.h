/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_PB_SCREEN_SCREEN_PB_H_INCLUDED
#define PB_PB_SCREEN_SCREEN_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _PB_Screen_StartStreamRequest { 
    char dummy_field;
} PB_Screen_StartStreamRequest;

typedef struct _PB_Screen_StopStreamRequest { 
    char dummy_field;
} PB_Screen_StopStreamRequest;

typedef struct _PB_Screen_StreamFrame { 
    pb_bytes_array_t *data; 
} PB_Screen_StreamFrame;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define PB_Screen_StartStreamRequest_init_default {0}
#define PB_Screen_StopStreamRequest_init_default {0}
#define PB_Screen_StreamFrame_init_default       {NULL}
#define PB_Screen_StartStreamRequest_init_zero   {0}
#define PB_Screen_StopStreamRequest_init_zero    {0}
#define PB_Screen_StreamFrame_init_zero          {NULL}

/* Field tags (for use in manual encoding/decoding) */
#define PB_Screen_StreamFrame_data_tag           1

/* Struct field encoding specification for nanopb */
#define PB_Screen_StartStreamRequest_FIELDLIST(X, a) \

#define PB_Screen_StartStreamRequest_CALLBACK NULL
#define PB_Screen_StartStreamRequest_DEFAULT NULL

#define PB_Screen_StopStreamRequest_FIELDLIST(X, a) \

#define PB_Screen_StopStreamRequest_CALLBACK NULL
#define PB_Screen_StopStreamRequest_DEFAULT NULL

#define PB_Screen_StreamFrame_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, BYTES,    data,              1)
#define PB_Screen_StreamFrame_CALLBACK NULL
#define PB_Screen_StreamFrame_DEFAULT NULL

extern const pb_msgdesc_t PB_Screen_StartStreamRequest_msg;
extern const pb_msgdesc_t PB_Screen_StopStreamRequest_msg;
extern const pb_msgdesc_t PB_Screen_StreamFrame_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define PB_Screen_StartStreamRequest_fields &PB_Screen_StartStreamRequest_msg
#define PB_Screen_StopStreamRequest_fields &PB_Screen_StopStreamRequest_msg
#define PB_Screen_StreamFrame_fields &PB_Screen_StreamFrame_msg

/* Maximum encoded size of messages (where known) */
/* PB_Screen_StreamFrame_size depends on runtime parameters */
#define PB_Screen_StartStreamRequest_size        0
#define PB_Screen_StopStreamRequest_size         0

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
